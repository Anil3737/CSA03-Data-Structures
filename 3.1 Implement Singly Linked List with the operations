//Linked List
#include<stdio.h>
#include<stdlib.h>
struct node{
	int data;
	struct node *next;
}*head,*tail,*n;
void display(){
	struct node *t;
	t=head;
	while(t!=NULL){
		printf("%d ",t->data);
		t=t->next;
	}
	printf("\n");
}
void ins_beg(int num){
	n=(struct node*)malloc(sizeof(struct node));
	n->data=num;
	n->next=NULL;
	if(head==NULL){
		head=tail=n;
	}
	else{
		n->next=head;
		head=n;
	}
}
void ins_end(int num){
	n=(struct node*)malloc(sizeof(struct node));
	n->data=num;
	n->next=NULL;
	if(head==NULL){
		head=tail=n;
	}
	else{
		tail->next=n;
		tail=n;
	}
}
void ins_mid(int num,int pos){
	n=(struct node*)malloc(sizeof(struct node));
	n->data=num;
	n->next=NULL;
	struct node *t;
	for(t=head;t!=NULL;t=t->next){
		if(t->data==pos){
			break;
		}
	}
	n->next=t->next;
	t->next=n;
}
void del_beg(){
	if(head==NULL){
		return;
	}
	else{
		struct node *t;
		t=head;
		head=t->next;
		free(t);
	}
}
void del_end(){
	struct node *t,*tp;
	t=head;
	while(t->next!=NULL){
		tp=t;
		t=t->next;
	}
	tail=tp;
	tail->next=NULL;
	free(t);
}
void del_mid(int pos){
	struct node *t,*tp;
	t=head;
	while(t->data!=pos){
		tp=t;
		t=t->next;
	}
	tp->next=t->next;
	free(t);
}
void search(int key){
	struct node *t;
	for(t=head;t!=NULL;t=t->next){
		if(t->data==key){
			printf("\nKey found in list");
			return;
		}
	}
	printf("\nKey not found in list");
	return;
}
void max_min(){
	struct node *t;
	int max,min;
	max=min=head->data;
	for(t=head;t!=NULL;t=t->next){
		if(t->data>max)
		max=t->data;
		else if(t->data<min)
		min=t->data;
	}
	printf("\nMax is %d, Min is %d",max,min);
}
void swap(struct node *a, struct node *b){
	int temp=a->data;
	a->data=b->data;
	b->data=temp;
}
void sort(struct node* head){
    int swapped;
    struct node* t;
    struct node* tp=NULL;
    if(head==NULL)
        return;
    do{
        swapped=0;
        t=head;
        while( t->next != tp){
            if(t->data > t->next->data){
                swap(t,t->next);
                swapped= 1;
            }
            t=t->next;
        }
        tp=t;
    }while(swapped);
}
int main(){
	printf("Name: Philip Gracian Sanova\nReg No:192324023\n");
	ins_end(10);
	ins_end(20);
	ins_end(30);
	ins_end(40);
	printf("[1]Insert Node at Begining\n[2]Insert Node at End\n[3]Insert Node at Middle\n[4]Delete Node at Begining\n[5]Delete Node at End\n[6]Delete Node at the Middle\n[7]Find Max and Min in the list\n[8]Search for key element in the list\n[9]Sort the list in ascending order\n[10]Display the list");
	printf("\n\nEnter your choice:");
	int ch,num,pos;
	scanf("%d",&ch);
	switch(ch){
		case 1:
			printf("\nEnter number:");
			scanf("%d",&num);
			ins_end(num);
			break;
		case 2:
			printf("\nEnter number:");
			scanf("%d",&num);
			ins_end(num);
			break;
		case 3:
			printf("\nEnter number and position:");
			scanf("%d",&num,&pos);
			ins_end(num);
			break;
		case 4:
			del_beg();
			break;
		case 5:
			del_end();
			break;
		case 6:
			printf("\nEnter number you want to delete:");
			scanf("%d",&num);
			del_mid(num);
			break;
		case 7:
			max_min();
			break;
		case 8:
			printf("\nEnter the search key:");
			scanf("%d",&num);
			search(num);
			break;
		case 9:
			sort(head);
			break;
		case 10:
			display();
			break;
		default:
			printf("\nEntered input is out of bounds");
			break;
		}
	return 0;
}
